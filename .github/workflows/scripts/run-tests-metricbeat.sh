#!/usr/bin/env bash

set -eu
set -o pipefail


source "${BASH_SOURCE[0]%/*}"/lib/testing.sh


cid_es="$(container_id elasticsearch)"
cid_mb="$(container_id metricbeat)"

ip_es="$(service_ip elasticsearch)"
ip_mb="$(service_ip metricbeat)"

es_ca_cert=$(realpath "$(dirname "${BASH_SOURCE[0]}")"/../../../tls/certs/ca/ca.crt)

grouplog 'Wait for readiness of Elasticsearch'
poll_ready "$cid_es" 'https://elasticsearch:9200/' --resolve "elasticsearch:9200:${ip_es}" --cacert "$es_ca_cert" -u 'elastic:testpasswd'
endgroup

grouplog 'Wait for readiness of Metricbeat'
poll_ready "$cid_mb" 'http://metricbeat:5066/?pretty' --resolve "metricbeat:5066:${ip_mb}"
endgroup

log 'Searching a document generated by Metricbeat'

query=$( (IFS= read -r -d '' data || echo "$data" | jq -c) <<EOD
{
  "query": {
    "bool": {
      "must": [
        {
          "term": {
            "agent.type": "metricbeat"
          }
        },
        {
          "term": {
            "event.module": "docker"
          }
        },
        {
          "term": {
            "event.dataset": "docker.container"
          }
        },
        {
          "term": {
            "container.name": "docker-elk-elasticsearch-1"
          }
        }
      ]
    }
  }
}
EOD
)

declare -a search_args=( '-s' '-u' 'elastic:testpasswd'
	'https://elasticsearch:9200/metricbeat-*/_search?size=1&pretty'
	'--resolve' "elasticsearch:9200:${ip_es}" --cacert "$es_ca_cert"
	'-H' 'Content-Type: application/json'
	'-d' "${query}"
)
declare response
declare -i count

echo "curl arguments: ${search_args[*]}"

declare -i was_retried=0

# retry for max 60s (30*2s)
for _ in $(seq 1 30); do
	response="$(curl "${search_args[@]}")"

	set +u  # prevent "unbound variable" if assigned value is not an integer
	count="$(jq -rn --argjson data "${response}" '$data.hits.total.value')"
	set -u

	if (( count > 0 )); then
		break
	fi

	was_retried=1
	echo -n 'x' >&2
	sleep 2
done
if ((was_retried)); then
	# flush stderr, important in non-interactive environments (CI)
	echo >&2
fi

echo "$response"
# Metricbeat buffers metrics until Elasticsearch becomes ready, so we tolerate
# multiple results
if (( count == 0 )); then
	echo 'Expected at least 1 document'
	exit 1
fi
